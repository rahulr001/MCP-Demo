{
  "fileTypes": [
    "terragrunt"
  ],
  "name": "Terragrunt",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "begin": "\\b(terraform)([\\w\\-\\\"$])?(?:\\s+)?({)",
      "beginCaptures": {
        "1": {
          "name": "keyword.declaration.$1.terragrunt"
        },
        "2": {
          "name": "invalid.illegal.keyword.$1.terragrunt"
        },
        "3": {
          "name": "punctuation.declaration.block.begin.terragrunt"
        }
      },
      "end": "}",
      "endCaptures": {
        "0": {
          "name": "punctuation.declaration.block.end.terragrunt"
        }
      },
      "name": "meta.terraform.terragrunt",
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#version"
        },
        {
          "captures": {
            "1": {
              "name": "storage.modifier.source.terragrunt"
            },
            "2": {
              "name": "keyword.operator.assignment.terragrunt"
            }
          },
          "match": "\\b(source)(?:\\s+)?(=)(?:\\s+)?",
          "name": "meta.terraform.source.terragrunt"
        },
        {
          "include": "#definition-right"
        },
        {
          "captures": {
            "1": {
              "name": "storage.modifier.required_version.terragrunt"
            },
            "2": {
              "name": "keyword.operator.assignment.terragrunt"
            },
            "3": {
              "name": "string.quoted.double.terragrunt punctuation.definition.string.begin.terragrunt"
            },
            "4": {
              "name": "string.quoted.double.terragrunt"
            },
            "5": {
              "name": "string.quoted.double.terragrunt punctuation.definition.string.end.terragrunt"
            }
          },
          "match": "\\b(required_version)(?:\\s+)?(=)(?:\\s+)?(\")([^$\"]+)?(\")",
          "name": "meta.terraform.required_version.terragrunt"
        },
        {
          "begin": "\\b(required_providers)([\\w\\-\\\"$])?(?:\\s+)?({)",
          "beginCaptures": {
            "2": {
              "name": "invalid.illegal.keyword.$1.terragrunt"
            },
            "3": {
              "name": "punctuation.definition.block.begin.terragrunt"
            }
          },
          "end": "}",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.block.end.terragrunt"
            }
          },
          "name": "meta.terraform.required_providers.terragrunt",
          "patterns": [
            {
              "include": "#comments"
            },
            {
              "captures": {
                "1": {
                  "name": "entity.name.provider.terragrunt"
                },
                "2": {
                  "name": "keyword.operator.assignment.terragrunt"
                },
                "3": {
                  "name": "string.quoted.double.terragrunt punctuation.definition.string.begin.terragrunt"
                },
                "4": {
                  "name": "string.quoted.double.terragrunt"
                },
                "5": {
                  "name": "string.quoted.double.terragrunt punctuation.definition.string.end.terragrunt"
                }
              },
              "match": "\\b([\\-\\w]+)(?:\\s+)?(=)(?:\\s+)?(\")([^$\"]+)?(\")"
            }
          ]
        },
        {
          "begin": "\\b(backend)(?:\\s+)?(\")([^$\"]+)?(\")(?:\\s+)?({)",
          "beginCaptures": {
            "2": {
              "name": "string.quoted.double.terragrunt punctuation.definition.string.begin.terragrunt"
            },
            "3": {
              "name": "string.quoted.double.terragrunt",
              "patterns": [
                {
                  "match": "(?\u003c=\")([^a-z]+)",
                  "name": "invalid.illegal.terragrunt"
                }
              ]
            },
            "4": {
              "name": "string.quoted.double.terragrunt punctuation.definition.string.end.terragrunt"
            },
            "5": {
              "name": "punctuation.definition.block.begin.terragrunt"
            }
          },
          "end": "}",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.block.end.terragrunt"
            }
          },
          "name": "meta.terraform.backend.terragrunt",
          "patterns": [
            {
              "include": "#comments"
            },
            {
              "captures": {
                "1": {
                  "name": "support.backend.attribute.terragrunt"
                },
                "2": {
                  "name": "keyword.operator.assignment.terragrunt"
                },
                "3": {
                  "name": "string.quoted.double.terragrunt punctuation.definition.string.begin.terragrunt"
                },
                "4": {
                  "name": "string.quoted.double.terragrunt"
                },
                "5": {
                  "name": "string.quoted.double.terragrunt punctuation.definition.string.end.terragrunt"
                }
              },
              "match": "\\b([\\-\\w]+)(?:\\s+)?(=)(?:\\s+)?"
            },
            {
              "include": "#definition-right"
            }
          ]
        }
      ]
    },
    {
      "begin": "\\b(locals)([\\w\\-\\\"$])?(?:\\s+)?({)",
      "beginCaptures": {
        "1": {
          "name": "keyword.declaration.$1.terragrunt"
        },
        "2": {
          "name": "invalid.illegal.keyword.$1.terragrunt"
        },
        "3": {
          "name": "punctuation.declaration.block.begin.terragrunt"
        }
      },
      "end": "}",
      "endCaptures": {
        "0": {
          "name": "punctuation.declaration.block.end.terragrunt"
        }
      },
      "name": "meta.locals.terragrunt",
      "patterns": [
        {
          "captures": {
            "1": {
              "name": "variable.other.readwrite.terragrunt"
            },
            "2": {
              "name": "keyword.operator.assignment.terragrunt"
            }
          },
          "match": "\\b([\\-\\w]+)(?:\\s+)?(=)(?!=|\u003e|\u003c)"
        },
        {
          "include": "#definition-right"
        }
      ]
    },
    {
      "begin": "\\b(include)([\\w\\-\\\"$])?(?:\\s+)?({)",
      "beginCaptures": {
        "1": {
          "name": "keyword.declaration.$1.terragrunt"
        },
        "2": {
          "name": "invalid.illegal.keyword.$1.terragrunt"
        },
        "3": {
          "name": "punctuation.declaration.block.begin.terragrunt"
        }
      },
      "end": "}",
      "endCaptures": {
        "0": {
          "name": "punctuation.declaration.block.end.terragrunt"
        }
      },
      "name": "meta.include.terragrunt",
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "captures": {
            "1": {
              "name": "storage.modifier.path.terragrunt"
            },
            "2": {
              "name": "keyword.operator.assignment.terragrunt"
            }
          },
          "match": "\\b(path)(?:\\s+)?(=)(?:\\s+)?"
        },
        {
          "include": "#definition-right"
        }
      ]
    },
    {
      "begin": "\\b(inputs)([\\w\\-\\\"$])?(?:\\s+)?(=)(?:\\s+)?({)",
      "beginCaptures": {
        "1": {
          "name": "keyword.declaration.$1.terragrunt"
        },
        "2": {
          "name": "invalid.illegal.keyword.$1.terragrunt"
        },
        "3": {
          "name": "keyword.operator.assignment.terragrunt"
        },
        "4": {
          "name": "punctuation.declaration.block.begin.terragrunt"
        }
      },
      "end": "}",
      "endCaptures": {
        "0": {
          "name": "punctuation.declaration.block.end.terragrunt"
        }
      },
      "name": "meta.inputs.terragrunt",
      "patterns": [
        {
          "captures": {
            "1": {
              "name": "variable.other.readwrite.terragrunt"
            },
            "2": {
              "name": "keyword.operator.assignment.terragrunt"
            }
          },
          "match": "\\b([\\-\\w]+)(?:\\s+)?(=)(?!=|\u003e|\u003c)"
        },
        {
          "include": "#definition-right"
        }
      ]
    },
    {
      "begin": "\\b(dependency)([\\w\\-\\\"$])?(?:\\s+)?(\")?([^\\\"\\n]+)?(\")?(?:\\s+)?({)",
      "beginCaptures": {
        "1": {
          "name": "keyword.declaration.$1.terragrunt"
        },
        "2": {
          "name": "invalid.illegal.keyword.$1.terragrunt"
        },
        "3": {
          "name": "string.quoted.double.terragrunt punctuation.definition.string.begin.terragrunt"
        },
        "4": {
          "name": "string.quoted.double.terragrunt entity.name.dependency.terragrunt"
        },
        "5": {
          "name": "string.quoted.double.terragrunt punctuation.definition.string.end.terragrunt"
        },
        "6": {
          "name": "punctuation.declaration.block.begin.terragrunt"
        }
      },
      "end": "}",
      "endCaptures": {
        "0": {
          "name": "punctuation.declaration.block.end.terragrunt"
        }
      },
      "name": "meta.dependency.terragrunt",
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#version"
        },
        {
          "captures": {
            "1": {
              "name": "support.dependency.attribute.terragrunt"
            },
            "2": {
              "name": "keyword.operator.assignment.terragrunt"
            }
          },
          "match": "\\b([\\-\\w]+)(?:\\s+)?(=)(?:\\s+)?"
        },
        {
          "include": "#definition-right"
        }
      ]
    },
    {
      "begin": "\\b(module)([\\w\\-\\\"$])?(?:\\s+)?(\")?([^\\\"\\n]+)?(\")?(?:\\s+)?({)",
      "beginCaptures": {
        "1": {
          "name": "keyword.declaration.$1.terragrunt"
        },
        "2": {
          "name": "invalid.illegal.keyword.$1.terragrunt"
        },
        "3": {
          "name": "string.quoted.double.terragrunt punctuation.definition.string.begin.terragrunt"
        },
        "4": {
          "name": "string.quoted.double.terragrunt entity.name.module.terragrunt"
        },
        "5": {
          "name": "string.quoted.double.terragrunt punctuation.definition.string.end.terragrunt"
        },
        "6": {
          "name": "punctuation.declaration.block.begin.terragrunt"
        }
      },
      "end": "}",
      "endCaptures": {
        "0": {
          "name": "punctuation.declaration.block.end.terragrunt"
        }
      },
      "name": "meta.module.terragrunt",
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#version"
        },
        {
          "captures": {
            "1": {
              "name": "support.module.attribute.terragrunt"
            },
            "2": {
              "name": "keyword.operator.assignment.terragrunt"
            }
          },
          "match": "\\b([\\-\\w]+)(?:\\s+)?(=)(?:\\s+)?"
        },
        {
          "include": "#definition-right"
        }
      ]
    },
    {
      "begin": "\\b(dependencies)([\\w\\-\\\"$])?(?:\\s+)?({)",
      "beginCaptures": {
        "1": {
          "name": "keyword.declaration.$1.terragrunt"
        },
        "2": {
          "name": "invalid.illegal.keyword.$1.terragrunt"
        },
        "3": {
          "name": "punctuation.declaration.block.begin.terragrunt"
        }
      },
      "end": "}",
      "endCaptures": {
        "0": {
          "name": "punctuation.declaration.block.end.terragrunt"
        }
      },
      "name": "meta.dependencies.terragrunt",
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "captures": {
            "1": {
              "name": "storage.modifier.path.terragrunt"
            },
            "2": {
              "name": "keyword.operator.assignment.terragrunt"
            }
          },
          "match": "\\b(paths)(?:\\s+)?(=)(?:\\s+)?"
        },
        {
          "include": "#definition-right"
        }
      ]
    },
    {
      "begin": "\\b(provider)([\\w\\-\\\"$])?(?:\\s+)?(\")?([^\\\"\\n]+)?(\")?(?:\\s+)?({)",
      "beginCaptures": {
        "1": {
          "name": "keyword.declaration.$1.terragrunt"
        },
        "2": {
          "name": "invalid.illegal.keyword.$1.terragrunt"
        },
        "3": {
          "name": "string.quoted.double.terragrunt punctuation.definition.string.begin.terragrunt"
        },
        "4": {
          "name": "string.quoted.double.terragrunt entity.name.provider.terragrunt"
        },
        "5": {
          "name": "string.quoted.double.terragrunt punctuation.definition.string.end.terragrunt"
        },
        "6": {
          "name": "punctuation.declaration.block.begin.terragrunt"
        }
      },
      "end": "}",
      "endCaptures": {
        "0": {
          "name": "punctuation.declaration.block.end.terragrunt"
        }
      },
      "name": "meta.provider.terragrunt",
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#version"
        },
        {
          "captures": {
            "1": {
              "name": "support.provider.attribute.terragrunt"
            },
            "2": {
              "name": "keyword.operator.assignment.terragrunt"
            }
          },
          "match": "\\b([\\-\\w]+)(?:\\s+)?(=)(?:\\s+)?"
        },
        {
          "include": "#definition-right"
        }
      ]
    },
    {
      "begin": "\\b(variable)([\\w\\-\\\"$])?(?:\\s+)?(\")?([^\\\"\\n]+)?(\")?(?:\\s+)?({)",
      "beginCaptures": {
        "1": {
          "name": "keyword.declaration.$1.terragrunt"
        },
        "2": {
          "name": "invalid.illegal.keyword.$1.terragrunt"
        },
        "3": {
          "name": "string.quoted.double.terragrunt punctuation.definition.string.begin.terragrunt"
        },
        "4": {
          "name": "string.quoted.double.terragrunt entity.name.$1.terragrunt"
        },
        "5": {
          "name": "string.quoted.double.terragrunt punctuation.definition.string.end.terragrunt"
        },
        "6": {
          "name": "punctuation.declaration.block.begin.terragrunt"
        }
      },
      "end": "}",
      "endCaptures": {
        "0": {
          "name": "punctuation.declaration.block.end.terragrunt"
        }
      },
      "name": "meta.variable.terragrunt",
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "captures": {
            "1": {
              "name": "meta.keyword.$1.terragrunt"
            },
            "2": {
              "name": "keyword.operator.assignment.terragrunt"
            }
          },
          "match": "\\b(type|default|description)(?:\\s+)?(=)(?:\\s+)?"
        },
        {
          "captures": {
            "1": {
              "name": "meta.keyword.$1.terragrunt"
            }
          },
          "match": "\\b(string|number|bool|list|map|set|object|touple|any)\\b"
        },
        {
          "include": "#definition-right"
        },
        {
          "match": "\\S",
          "name": "invalid.illegal.keyword.variable.terragrunt"
        }
      ]
    },
    {
      "begin": "\\b(output)([\\w\\-\\\"$])?(?:\\s+)?(\")?([^\\\"\\n]+)?(\")?(?:\\s+)?({)",
      "beginCaptures": {
        "1": {
          "name": "keyword.declaration.$1.terragrunt"
        },
        "2": {
          "name": "invalid.illegal.keyword.$1.terragrunt"
        },
        "3": {
          "name": "string.quoted.double.terragrunt punctuation.definition.string.begin.terragrunt"
        },
        "4": {
          "name": "string.quoted.double.terragrunt entity.name.$1.terragrunt"
        },
        "5": {
          "name": "string.quoted.double.terragrunt punctuation.definition.string.end.terragrunt"
        },
        "6": {
          "name": "punctuation.declaration.block.begin.terragrunt"
        }
      },
      "end": "}",
      "endCaptures": {
        "0": {
          "name": "punctuation.declaration.block.end.terragrunt"
        }
      },
      "name": "meta.output.terragrunt",
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "captures": {
            "1": {
              "name": "support.output.attribute.terragrunt"
            },
            "2": {
              "name": "keyword.operator.assignment.terragrunt"
            }
          },
          "match": "\\b(name|value|description|sensitive|depends_on)(?:\\s+)?(=)(?:\\s+)?"
        },
        {
          "include": "#definition-right"
        }
      ]
    },
    {
      "begin": "\\b(data)([\\w\\-\\\"$])?(?:\\s+)?(\")?([^\\\"\\n]+)?(\")?(?:\\s+)?(\")?([^\\\"\\n]+)?(\")?(?:\\s+)?({)",
      "beginCaptures": {
        "1": {
          "name": "keyword.declaration.$1.terragrunt"
        },
        "2": {
          "name": "invalid.illegal.keyword.$1.terragrunt"
        },
        "3": {
          "name": "string.quoted.double.terragrunt punctuation.definition.string.begin.terragrunt"
        },
        "4": {
          "name": "string.quoted.double.terragrunt entity.type.$1.terragrunt"
        },
        "5": {
          "name": "string.quoted.double.terragrunt punctuation.definition.string.end.terragrunt"
        },
        "6": {
          "name": "string.quoted.double.terragrunt punctuation.definition.string.begin.terragrunt"
        },
        "7": {
          "name": "string.quoted.double.terragrunt entity.name.$1.terragrunt"
        },
        "8": {
          "name": "string.quoted.double.terragrunt punctuation.definition.string.end.terragrunt"
        },
        "9": {
          "name": "punctuation.declaration.block.begin.terragrunt"
        }
      },
      "end": "}",
      "endCaptures": {
        "0": {
          "name": "punctuation.declaration.block.end.terragrunt"
        }
      },
      "name": "meta.data.terragrunt",
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "captures": {
            "1": {
              "name": "support.data.attribute.terragrunt"
            },
            "2": {
              "name": "keyword.operator.assignment.terragrunt"
            }
          },
          "match": "\\b([\\-\\w]+)(?:\\s+)?(=)(?:\\s+)?"
        },
        {
          "include": "#definition-right"
        }
      ]
    },
    {
      "begin": "\\b(resource)([\\w\\-\\\"$])?(?:\\s+)?(\")?([^\\\"\\n]+)?(\")?(?:\\s+)?(\")?([^\\\"\\n]+)?(\")?(?:\\s+)?({)",
      "beginCaptures": {
        "1": {
          "name": "keyword.declaration.$1.terragrunt"
        },
        "2": {
          "name": "invalid.illegal.keyword.$1.terragrunt"
        },
        "3": {
          "name": "string.quoted.double.terragrunt punctuation.definition.string.begin.terragrunt"
        },
        "4": {
          "name": "string.quoted.double.terragrunt entity.type.$1.terragrunt"
        },
        "5": {
          "name": "string.quoted.double.terragrunt punctuation.definition.string.end.terragrunt"
        },
        "6": {
          "name": "string.quoted.double.terragrunt punctuation.definition.string.begin.terragrunt"
        },
        "7": {
          "name": "string.quoted.double.terragrunt entity.name.$1.terragrunt"
        },
        "8": {
          "name": "string.quoted.double.terragrunt punctuation.definition.string.end.terragrunt"
        },
        "9": {
          "name": "punctuation.declaration.block.begin.terragrunt"
        }
      },
      "end": "}",
      "endCaptures": {
        "0": {
          "name": "punctuation.declaration.block.end.terragrunt"
        }
      },
      "name": "meta.resource.terragrunt",
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "captures": {
            "1": {
              "name": "support.resource.attribute.terragrunt"
            },
            "2": {
              "name": "keyword.operator.assignment.terragrunt"
            }
          },
          "match": "\\b([\\-\\w]+)(?:\\s+)?(=)(?:\\s+)?"
        },
        {
          "include": "#definition-right"
        }
      ]
    },
    {
      "begin": "\\b(generate)([\\w\\-\\\"$])?(?:\\s+)?(\")?([^\\\"\\n]+)?(\")?(?:\\s+)?(\")?([^\\\"\\n]+)?(\")?(?:\\s+)?({)",
      "beginCaptures": {
        "1": {
          "name": "keyword.declaration.$1.terragrunt"
        },
        "2": {
          "name": "invalid.illegal.keyword.$1.terragrunt"
        },
        "3": {
          "name": "string.quoted.double.terragrunt punctuation.definition.string.begin.terragrunt"
        },
        "4": {
          "name": "string.quoted.double.terragrunt entity.type.$1.terragrunt"
        },
        "5": {
          "name": "string.quoted.double.terragrunt punctuation.definition.string.end.terragrunt"
        },
        "6": {
          "name": "string.quoted.double.terragrunt punctuation.definition.string.begin.terragrunt"
        },
        "7": {
          "name": "string.quoted.double.terragrunt entity.name.$1.terragrunt"
        },
        "8": {
          "name": "string.quoted.double.terragrunt punctuation.definition.string.end.terragrunt"
        },
        "9": {
          "name": "punctuation.declaration.block.begin.terragrunt"
        }
      },
      "end": "}",
      "endCaptures": {
        "0": {
          "name": "punctuation.declaration.block.end.terragrunt"
        }
      },
      "name": "meta.generate.terragrunt",
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "captures": {
            "1": {
              "name": "support.generate.attribute.terragrunt"
            },
            "2": {
              "name": "keyword.operator.assignment.terragrunt"
            }
          },
          "match": "\\b([\\-\\w]+)(?:\\s+)?(=)(?:\\s+)?"
        },
        {
          "include": "#definition-right"
        }
      ]
    },
    {
      "begin": "\\b(remote_state)([\\w\\-\\\"$])?(?:\\s+)?({)",
      "beginCaptures": {
        "1": {
          "name": "keyword.declaration.$1.terragrunt"
        },
        "2": {
          "name": "invalid.illegal.keyword.$1.terragrunt"
        },
        "3": {
          "name": "punctuation.declaration.block.begin.terragrunt"
        }
      },
      "end": "}",
      "endCaptures": {
        "0": {
          "name": "punctuation.declaration.block.end.terragrunt"
        }
      },
      "name": "meta.remote-state.terragrunt",
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "captures": {
            "1": {
              "name": "support.remote-state.attribute.terragrunt"
            },
            "2": {
              "name": "keyword.operator.assignment.terragrunt"
            }
          },
          "match": "\\b([\\-\\w]+)(?:\\s+)?(=)(?:\\s+)?"
        },
        {
          "include": "#definition-right"
        }
      ]
    },
    {
      "include": "#invalid"
    }
  ],
  "repository": {
    "blocks": {
      "begin": "{",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.block.begin.terragrunt"
        }
      },
      "end": "}",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.block.end.terragrunt"
        }
      },
      "name": "meta.block.terragrunt",
      "patterns": [
        {
          "include": "#definition-right"
        },
        {
          "include": "#blocks"
        }
      ]
    },
    "braces-round": {
      "match": "\\(|\\)",
      "name": "meta.brace.round.terragrunt"
    },
    "braces-square": {
      "match": "\\[|\\]",
      "name": "meta.brace.square.terragrunt"
    },
    "comment-block": {
      "begin": "/\\*",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.comment.begin.terragrunt"
        }
      },
      "end": "\\*/",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.comment.end.terragrunt"
        }
      },
      "name": "comment.block.terragrunt"
    },
    "comment-line-double-slash": {
      "begin": "//",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.comment.terragrunt"
        }
      },
      "end": "$",
      "name": "comment.line.double-slash.terragrunt"
    },
    "comment-line-number-sign": {
      "begin": "#",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.comment.terragrunt"
        }
      },
      "end": "$",
      "name": "comment.line.number-sign.terragrunt"
    },
    "comments": {
      "patterns": [
        {
          "include": "#comment-line-number-sign"
        },
        {
          "include": "#comment-line-double-slash"
        },
        {
          "include": "#comment-block"
        }
      ]
    },
    "constants-boolean": {
      "match": "\\b(true|false)\\b",
      "name": "constant.language.boolean.$1.js"
    },
    "constants-decimal": {
      "captures": {
        "1": {
          "name": "meta.delimiter.decimal.period.js"
        }
      },
      "match": "\\b\\d+(\\.)?(\\d+)?",
      "name": "constant.numeric.decimal.terragrunt"
    },
    "constants-language": {
      "match": "\\b(null)\\b",
      "name": "constant.language.$1.js"
    },
    "definition-right": {
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#support-path"
        },
        {
          "include": "#support-self"
        },
        {
          "include": "#support-count-index"
        },
        {
          "include": "#support-variable"
        },
        {
          "include": "#support-local"
        },
        {
          "include": "#support-module"
        },
        {
          "include": "#support-dependency"
        },
        {
          "include": "#support-terraform"
        },
        {
          "include": "#support-data"
        },
        {
          "include": "#support-function-numeric"
        },
        {
          "include": "#support-function-string"
        },
        {
          "include": "#support-function-collection"
        },
        {
          "include": "#support-function-encoding"
        },
        {
          "include": "#support-function-filesystem"
        },
        {
          "include": "#support-function-datetime"
        },
        {
          "include": "#support-function-crypto"
        },
        {
          "include": "#support-function-cli"
        },
        {
          "include": "#support-function-aws"
        },
        {
          "include": "#support-function-network"
        },
        {
          "include": "#support-function-conversion"
        },
        {
          "include": "#support-function-other"
        },
        {
          "include": "#constants-decimal"
        },
        {
          "include": "#constants-boolean"
        },
        {
          "include": "#constants-language"
        },
        {
          "include": "#punctuation-comma"
        },
        {
          "include": "#punctuation-accessor"
        },
        {
          "include": "#keyword-ternary"
        },
        {
          "include": "#keyword-comparison"
        },
        {
          "include": "#keyword-conditional"
        },
        {
          "include": "#keyword-loop"
        },
        {
          "include": "#braces-round"
        },
        {
          "include": "#braces-square"
        },
        {
          "include": "#strings"
        },
        {
          "include": "#heredoc"
        },
        {
          "include": "#blocks"
        }
      ]
    },
    "escape-char": {
      "match": "\\\\\\\"",
      "name": "constant.character.escape.terragrunt"
    },
    "heredoc": {
      "begin": "\u003c\u003c[\\-]?(\\w+)",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.string.template.begin.$1.terragrunt"
        }
      },
      "end": "\\1",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.template.end.terragrunt"
        }
      },
      "name": "string.unquoted.here-doc.terragrunt",
      "patterns": [
        {
          "match": "\\$\\${"
        },
        {
          "include": "#string-interpolation"
        },
        {
          "match": "%%{"
        },
        {
          "include": "#string-templates"
        }
      ]
    },
    "invalid": {
      "match": "\\S",
      "name": "invalid.illegal.terragrunt"
    },
    "keyword-comparison": {
      "match": "~\u003e|\u003e=|\u003c=|==|!=|[^\u003c]\u003c[^\u003c]|[^\u003e]\u003e[^\u003e]",
      "name": "keyword.operator.comparison.terragrunt"
    },
    "keyword-conditional": {
      "match": "\\b(if|else|endif)\\b",
      "name": "keyword.control.conditional.terragrunt"
    },
    "keyword-loop": {
      "match": "\\b(for|in|endfor)\\b",
      "name": "keyword.control.loop.terragrunt"
    },
    "keyword-ternary": {
      "match": "\\?|:",
      "name": "keyword.operator.ternary.terragrunt"
    },
    "punctuation-accessor": {
      "match": "(?\u003c=\\w)\\.(?=\\w)",
      "name": "punctuation.accessor.terragrunt"
    },
    "punctuation-comma": {
      "match": ",",
      "name": "punctuation.separator.comma.js"
    },
    "string-interpolation": {
      "begin": "\\${",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.template-expression.begin.terragrunt"
        }
      },
      "end": "}",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.template-expression.end.terragrunt"
        }
      },
      "name": "meta.template.expression.terragrunt meta.embedded.line.terragrunt",
      "patterns": [
        {
          "include": "#definition-right"
        }
      ]
    },
    "string-templates": {
      "begin": "%{",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.template-expression.begin.terragrunt"
        }
      },
      "end": "}",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.template-expression.end.terragrunt"
        }
      },
      "name": "meta.template.expression.terragrunt meta.embedded.line.terragrunt",
      "patterns": [
        {
          "include": "#definition-right"
        }
      ]
    },
    "strings": {
      "begin": "\"",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.template.begin.terragrunt"
        }
      },
      "end": "\"",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.template.end.terragrunt"
        }
      },
      "name": "string.template.terragrunt",
      "patterns": [
        {
          "include": "#escape-char"
        },
        {
          "match": "\\$\\${"
        },
        {
          "include": "#string-interpolation"
        },
        {
          "match": "%%{"
        },
        {
          "include": "#string-templates"
        }
      ]
    },
    "support-count-index": {
      "captures": {
        "1": {
          "name": "support.class.count.terragrunt"
        },
        "2": {
          "name": "punctuation.accessor.terragrunt"
        },
        "3": {
          "name": "support.variable.index.terragrunt"
        }
      },
      "match": "(?\u003c!\\.)\\b(count)(\\.)(index)\\b"
    },
    "support-data": {
      "captures": {
        "1": {
          "name": "support.class.data.terragrunt"
        },
        "2": {
          "name": "punctuation.accessor.terragrunt"
        },
        "3": {
          "name": "support.data.$3.terragrunt"
        },
        "4": {
          "name": "punctuation.accessor.terragrunt"
        },
        "5": {
          "name": "support.data.$3.attribute.terragrunt"
        }
      },
      "match": "(?\u003c!\\.|\\-)\\b(data)(\\.)(\\w+)(\\.)?(\\w+)?\\b"
    },
    "support-dependency": {
      "captures": {
        "1": {
          "name": "support.class.dependency.terragrunt"
        },
        "2": {
          "name": "punctuation.accessor.terragrunt"
        },
        "3": {
          "name": "support.dependency.$3.terragrunt"
        },
        "4": {
          "name": "punctuation.accessor.terragrunt"
        },
        "5": {
          "name": "support.dependency.$3.attribute.terragrunt"
        }
      },
      "match": "(?\u003c!\\.)\\b(dependency)(\\.)(\\w+)(\\.)?(\\w+)?\\b"
    },
    "support-function-aws": {
      "match": "(?\u003c!\\.)\\b(get_aws_account_id|get_aws_caller_identity_arn|get_aws_caller_identity_user_id)\\b(?=\\()",
      "name": "support.function.builtin.aws.terragrunt"
    },
    "support-function-cli": {
      "match": "(?\u003c!\\.)\\b(get_terraform_commands_that_need_vars|get_terraform_commands_that_need_input|get_terraform_commands_that_need_locking|get_terraform_commands_that_need_parallelism|get_terraform_command|get_terraform_cli_args|run_cmd)\\b(?=\\()",
      "name": "support.function.builtin.cli.terragrunt"
    },
    "support-function-collection": {
      "match": "(?\u003c!\\.)\\b(chunklist|coalescelist|coalesce|compact|concat|contains|distinct|element|flatten|index|keys|length|list|lookup|map|matchkeys|merge|range|reverse|setintersection|setproduct|setunion|slice|sort|transpose|values|zipmap)\\b(?=\\()",
      "name": "support.function.builtin.collection.terragrunt"
    },
    "support-function-conversion": {
      "match": "(?\u003c!\\.)\\b(tobool|tolist|tomap|tonumber|toset|tostring)\\b(?=\\()",
      "name": "support.function.builtin.conversion.terragrunt"
    },
    "support-function-crypto": {
      "match": "(?\u003c!\\.)\\b(sops_decrypt_file|base64sha256|base64sha512|bcrypt|filebase64sha256|filebase64sha512|filemd5|filesha1|filesha256|filesha512|md5|rsadecrypt|sha1|sha256|sha512|uuidv5|uuid)\\b(?=\\()",
      "name": "support.function.builtin.crypto.terragrunt"
    },
    "support-function-datetime": {
      "match": "(?\u003c!\\.)\\b(formatdate|timeadd|timestamp)\\b(?=\\()",
      "name": "support.function.builtin.datetime.terragrunt"
    },
    "support-function-encoding": {
      "match": "(?\u003c!\\.)\\b(base64decode|base64encode|base64gzip|csvdecode|jsondecode|jsonencode|urlencode|yamldecode|yamlencode)\\b(?=\\()",
      "name": "support.function.builtin.encoding.terragrunt"
    },
    "support-function-filesystem": {
      "match": "(?\u003c!\\.)\\b(read_terragrunt_config|path_relative_to_include|get_terragrunt_dir|path_relative_from_include|find_in_parent_folders|get_parent_terragrunt_dir|abspath|dirname|pathexpand|basename|fileexists|filebase64|fileset|templatefile|file)\\b(?=\\()",
      "name": "support.function.builtin.filesystem.terragrunt"
    },
    "support-function-network": {
      "match": "(?\u003c!\\.)\\b(cidrhost|cidrnetmask|cidrsubnets|cidrsubnet)\\b(?=\\()",
      "name": "support.function.builtin.network.terragrunt"
    },
    "support-function-numeric": {
      "match": "(?\u003c!\\.)\\b(abs|ceil|floor|log|max|min|pow|signum|parseint)\\b(?=\\()",
      "name": "support.function.builtin.numeric.terragrunt"
    },
    "support-function-other": {
      "match": "(?\u003c!\\.)\\b(get_env|get_platform)\\b(?=\\()",
      "name": "support.function.builtin.other.terragrunt"
    },
    "support-function-string": {
      "match": "(?\u003c!\\.)\\b(chomp|formatlist|format|indent|join|lower|regexall|regex|replace|split|strrev|substr|title|trimspace|trimprefix|trimsuffix|trim|upper)\\b(?=\\()",
      "name": "support.function.builtin.string.terragrunt"
    },
    "support-local": {
      "captures": {
        "1": {
          "name": "support.class.local.terragrunt"
        },
        "2": {
          "name": "punctuation.accessor.terragrunt"
        },
        "3": {
          "name": "support.local.$3.terragrunt"
        }
      },
      "match": "(?\u003c!\\.)\\b(local)(\\.)(\\w+)\\b"
    },
    "support-module": {
      "captures": {
        "1": {
          "name": "support.class.module.terragrunt"
        },
        "2": {
          "name": "punctuation.accessor.terragrunt"
        },
        "3": {
          "name": "support.module.$3.terragrunt"
        },
        "4": {
          "name": "punctuation.accessor.terragrunt"
        },
        "5": {
          "name": "support.module.$3.attribute.terragrunt"
        }
      },
      "match": "(?\u003c!\\.)\\b(module)(\\.)(\\w+)(\\.)?(\\w+)?\\b"
    },
    "support-path": {
      "captures": {
        "1": {
          "name": "support.class.path.terragrunt"
        },
        "2": {
          "name": "punctuation.accessor.terragrunt"
        },
        "3": {
          "name": "support.path.$3.terragrunt"
        }
      },
      "match": "(?\u003c!\\.)\\b(path)(\\.)(\\w+)\\b"
    },
    "support-self": {
      "captures": {
        "1": {
          "name": "support.class.self.terragrunt"
        },
        "2": {
          "name": "punctuation.accessor.terragrunt"
        },
        "3": {
          "name": "support.self.$3.terragrunt"
        }
      },
      "match": "(?\u003c!\\.)\\b(self)(\\.)(\\w+)\\b"
    },
    "support-terraform": {
      "captures": {
        "1": {
          "name": "support.class.terraform.terragrunt"
        },
        "2": {
          "name": "punctuation.accessor.terragrunt"
        },
        "3": {
          "name": "support.terraform.$3.terragrunt"
        }
      },
      "match": "(?\u003c!\\.)\\b(terraform)(\\.)(\\w+)\\b"
    },
    "support-variable": {
      "captures": {
        "1": {
          "name": "support.class.variable.terragrunt"
        },
        "2": {
          "name": "punctuation.accessor.terragrunt"
        },
        "3": {
          "name": "support.variable.$3.terragrunt"
        }
      },
      "match": "(?\u003c!\\.)\\b(var)(\\.)(\\w+)\\b"
    },
    "version": {
      "captures": {
        "1": {
          "name": "storage.modifier.version.terragrunt"
        },
        "2": {
          "name": "keyword.operator.assignment.terragrunt"
        },
        "3": {
          "name": "string.quoted.double.terragrunt punctuation.definition.string.begin.terragrunt"
        },
        "4": {
          "name": "string.quoted.double.terragrunt"
        },
        "5": {
          "name": "string.quoted.double.terragrunt punctuation.definition.string.end.terragrunt"
        }
      },
      "match": "\\b(version)(?:\\s+)?(=)(?:\\s+)?(\")([^$\"]+)?(\")",
      "name": "meta.version.terragrunt"
    }
  },
  "scopeName": "source.terragrunt",
  "uuid": "61078867-6d09-46ff-856f-b7b7cf404233"
}
